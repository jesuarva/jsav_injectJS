/*
 * "jsav_injectJS" by jesuarva: Jean Surkouf Ariza Varela.
 * A Library that allows asynchronously load JS libraries. Then injects each resource in the DOM by precedency.
 * Last update on Sat Mar 17 2018 13:51:20
 * Licenses under MIT License
 */


window.jsav_ijs=function(){function r(e,n){var t=document.createElement("script");t.id=String(n),t.className="injectedScript",t.insertAdjacentHTML("beforeend",e),document.head.appendChild(t),console.log("Library injected")}function o(e){return fetch(e).then(function(e){return e.text()})}function i(e){console.log("Upsss! seems that something went wrong fetching a library"),console.log(e)}return{load:function(n,t){if(console.log("jsav_ijs.load(), fucntion called"),"string"!=typeof n)throw new Error("Argument Library -> Must be a String.");if(!n.endsWith(".js"))throw new Error("library to Fetch must be a Javascript file.");o(n).then(function(e){r(e,n),t()}).catch(i)},loadAll:function(t,e){if(console.log("jsav_ijs.loadAll(), function called."),!Array.isArray(t))throw new Error("Argument is not an Array. Pass your libraries by precedency into an Array.");t.forEach(function(e){if("string"!=typeof e)throw new Error("Elements in the Array must be in Strings format. At least one element in the Array is not of String type.");if(!e.endsWith(".js"))throw new Error("injectJS only fetch Javascript files. At least one of the elements in the Array is no a JS file.")});var n=[];t.forEach(function(e){n.push(o(e).catch(i))}),console.log("There are "+n.length+" libraies in the thenables array"),Promise.all(n).then(function(e){var n=0;e.forEach(function(e){r(e,t[n]),console.log("loadAll()  --\x3e  LibrariesArray["+n+"] --\x3e "+t[n]+" injected"),n++}),console.log("All Libraies injected in the DOM")}).then(function(){e(),console.log("ALL LIBRARIES FETCHED && INJECTED")}).catch(i)}}}();